# Generated by Django 2.2.1 on 2019-12-25 00:03

import custom.custom_tools
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(blank=True, max_length=254, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRSS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('rss_link', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'User RSS',
                'verbose_name_plural': 'User RSS',
            },
        ),
        migrations.CreateModel(
            name='UserProfileModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('address', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Address')),
                ('job_title', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Job Title')),
                ('company_organization', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Company/Organization')),
                ('soc_media_twitter', models.URLField(blank=True, default='', max_length=255, null=True, verbose_name='Twitter Profile')),
                ('soc_media_fb', models.URLField(blank=True, default='', max_length=100, null=True, verbose_name='Facebook Profile')),
                ('soc_media_linkedin', models.URLField(blank=True, default='', max_length=100, null=True, verbose_name='Linkedin Profile')),
                ('website', models.URLField(blank=True, default='', max_length=100, null=True, verbose_name='Website')),
                ('img', models.ImageField(blank=True, null=True, upload_to=custom.custom_tools.get_profile_img_path, verbose_name='User Photo')),
                ('slug', models.SlugField(blank=True, max_length=150, null=True, unique=True)),
                ('country', models.CharField(max_length=150, null=True)),
                ('rss', models.ManyToManyField(blank=True, to='users.UserRSS')),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Username')),
            ],
        ),
    ]
